#FILE dbg.conf

###The following are parameters used for debugging
dbg.atm   = 0   #test special atmosphere. >0: fourier mode with spatial frequency 1/dbg.atm m^-1. -1: plate scale (magnification)

dbg.wamethod=0  #0: Use mod on dm. 1: use mod on science when tomo.ahst_wt=2
dbg.mvstlimit=0 #limit MVST modes to the number if none zero
dbg.annular_W=0
dbg.tomo_maxit=[]#if not empty, will study these maxits in open loop
dbg.tomo_hxw=0  #1: force use hxw
dbg.ecovxx=0    #output ecovxx used to generate ecov.
dbg.useopdr=0   #use opdr. (deprecated)
dbg.cmpgpu=0    #1: make cpu code follow GPU implementation.
dbg.pupmask=0   #pupil mask (for ngs wfs, within LGS volume)
dbg.wfslinearity=-1#Study the linearity/noise property of pixel processing algorithms of this wfs.
dbg.nocgwarm=0    #disable warm restart in cg.
#dbg.deltafocus=0 #use delta focus between science and NGS estimated from opdr. Removed because opdr does not cover NGS WFS usually.
dbg.dmfullfov=0 #let DM cover full FoV (sim.fov)
dbg.tomo=0   #debug tomography in gpu
dbg.fit=0    #debug fitting in gpu
dbg.na_smooth = 1 #2014-05-07 smooth sodium profile. newly introduced. replaced llt.smooth
dbg.na_interp = 1 #2014-05-07 1: interpolate sodium profile (old way). 0: direct sum (slow, but accurate)
dbg.ncpa_preload=0 #preload integrator with DM sys flat
dbg.ncpa_nouncorr=0 #1: include uncorrelatable error in science path.
dbg.i0drift=1 #1: Control drift of i0
dbg.gradoff_scale=1 #scale the gradient reference vector
dbg.pwfs_psx=[0 0 0 0] #pyramid WFS pupil shift along x (in pixel). pupil ordering: -x+y, +x+y, -x-y, +x-y.
dbg.pwfs_psy=[0 0 0 0] #pyramid WFS pupil shift along y (in pixel).
dbg.pwfs_flate=0 #pyramid flat edge width in mas.
dbg.pwfs_flatv=0 #pyramid flat vertex width in mas.
dbg.pwfs_pupelong=0 #pyramid pupil radial elongation induced number of pixel offset at farthest radius on detector. 1 means pupil is larger by 2*sqrt(2) pixels along radial direction than the azimuthal direction.
dbg.dmoff=   #DM offset for simulating turbulence on the DM. dimension: ndm*nstep
dbg.gradoff= #Introduced additional gradient offset. dimension: nwfs*nstep

#For plotting
plot.setup=0 #plot aperture,powfs,recon grids, etc.
plot.atm=0   #plot atmosphere
plot.run=0   #plot wfs opd, gradients, DM opd, science opd, etc.
plot.opdx=0  #plot turbulence projeced to xloc.
plot.all=0   #enables plot.setup, plot.atm, and plot.run

#The saved files can be loaded with mex routine "read" in MATLAB.
save.extra=1 #Save extra results, namely clep, olep, cleNGSmp, etc
save.all=0   #saves everything below except gcov. mainly for debugging
save.setup=0 #save the data structs prepared during setup in subfolder "setup".
	     #They Can be loaded back in future simulation.
save.recon=0 #save reconstructor. big matrices.
save.mvst=0  #save mvst intermediate matrices in preparation to load later.
save.ncpa=0  #save NCPA surface in setup_surf.c
#Run time saving:
save.atm =0  #save atmosphere
save.run =0  #save run time information, also enables save.dmreal,gradcl,gradpsol


#The following four options takes 1) scalar values of 0 or 1 where 1 means all
#wfs. or 2) vector values equal to the number of wfs. In the vector case, 1
#means output, 0 means no output.
save.ints=0   #save wfs subaperture images (images). (read above)
save.grad=0   #save wfs gradients (also enabled by save.run)(read above)
save.wfsopd=0 #save wfs OPDs (read above)
save.gradgeom=0#save geometric grads in physical optics simulations (read above)
save.dither=0 #save estimated matched filter from dithering
save.evlopd=0 #save evaluation directions opd every this time step if >0. since 2011-02-07
save.opdr=0   #save reconstructed atmosphere. 
save.opdx=0   #save atmosphere propagated to reconstruction grid.
save.dm=0 #   total DM commands effective. including tip/tilt.(implicit if save.run=1)
#special run time saving that need extra computation.
save.gcovp=100#save the gcov every 100 steps to different files.
save.gcov=[]  #output covariance of psol gradient. set to [1 3 2 5] to output
	      #covariance between wfs 1 and 3, 2 and 5 drawdaemon is used to do
	      #the plotting.
save.mvmi=0   #save tomography output of mvm control matrix assembly for warm restart.
save.mvmf=0   #save FitR output of mvm control matrix assemble
save.mvm=0    #save MVM control matrix
load.atm=#"atm.fn" #load atmosphere. cell array of double number arrays. The
	 #sampling must match the key atm.dx in atm_*.conf
load.locs=#"aper_locs" #load aperture grid
load.aloc=#"aloc" #load DM grid
load.xloc=#"xloc" #load tomogrpahy grid. cell array
load.ploc=#"ploc" #load aperture reconstruction grid.
load.floc=#"floc" #load aperture fitting grid.
load.cxx=#"cxx^-1" #load laplacian or bihormonic operator.
load.HXF=#"HXF" #load propagation matrix from xloc to ploc along fit directions
load.HXW=#"HXW" #load propagation matrix from xloc to ploc along wfs directions
load.HA=#"HA" #load propagation matrix from aloc to ploc
load.GP=#"GP" #load gradient operator from ploc to wfs (for tomography)
load.GA=#"GA" #load gradient operator from aloc to wfs (to compute pseudo
	#openloop gradients)
load.GS0=0  #load gradient operator from WFS opd to WFS grad.
load.tomo=0 #load tomography reconstruction matrices
load.fit=0  #load fitting matrices.
load.W=0    #load aperture W0/W1 weighting matrix.
load.i0=    #load wfs pixel intensity matrices.
load.mvst=0 #load mvst intermediate matrices to avoid CBS
load.mvm=   #load recon.MVM as a cell array that converts gradients to actuator commands.
load.mvmi=  #load tomography output of mvm control matrix assembly for warm restart.
load.mvmf=  #load FitR output of mvm control matrix assembly.
load.ncpa=  #folder name: load NCPA surface saved during save.ncpa
